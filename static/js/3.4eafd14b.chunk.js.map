{"version":3,"sources":["components/Dialogs/DIalogItem/DialogItem.module.css","components/Dialogs/FormAddMessage/FormAddMessage.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DIalogItem/DialogItem.jsx","components/Dialogs/FormAddMessage/FormAddMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.module.css"],"names":["module","exports","Message","text","DialogItem","id","avatar","name","path","className","classes","dialog","src","alt","to","activeClassName","active","FormAddMessage","sendMessage","onSubmit","formData","newMessage","render","handleSubmit","form","event","a","reset","validate","composeValidators","required","maxLength","component","Textarea","placeholder","input_wrap","Dialogs","dialogsData","messagesData","dialogItems","map","key","messages","message","dialogs","dialog_list","chat","form_add","mapDispatchToProps","compose","connect","state","dialogsPage","withAuthRedirect"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,WAAa,qC,6ECOpDC,EANC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAChB,OACE,6BAAMA,I,0BCUKC,EAVI,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAC3BC,EAAI,mBAAeH,GACvB,OACE,yBAAKI,UAAS,UAAKC,IAAQC,OAAb,UACd,yBAAKC,IAAKN,EAAQO,IAAI,KACtB,kBAAC,IAAD,CAASC,GAAIN,EAAMO,gBAAiBL,IAAQM,QAAUT,K,iECH7CU,EAAiB,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAO9B,OACE,kBAAC,IAAD,CAAMC,SAPS,SAACC,GACbA,EAASC,YACVH,EAAYE,EAASC,aAKGC,OAAQ,gBAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,KAAhB,OAC9B,0BACEf,UAAS,UAAKC,IAAQc,KAAb,SACTL,SAAQ,uCAAE,WAAMM,GAAN,SAAAC,EAAA,sEACFH,EAAaE,GADX,OAERD,EAAKG,QAFG,2CAAF,uDAKV,kBAAC,IAAD,CACEpB,KAAK,aACLqB,SAAUC,YAAkBC,IAAUC,YAAU,KAChDC,UAAWC,IACXC,YAAY,wKACZzB,UAAWC,IAAQyB,aAEnB,6CCeKC,EArCC,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,aAAcpB,EAAiB,EAAjBA,YACrCqB,EAAcF,EAAYG,KAAI,SAAC7B,GACnC,OACA,kBAAC,EAAD,CACEN,GAAIM,EAAON,GACXoC,IAAK9B,EAAON,GACZE,KAAMI,EAAOJ,KACbD,OAAQK,EAAOL,YAKboC,EAAWJ,EAAaE,KAAI,SAACG,GACjC,OACE,kBAAC,EAAD,CACEtC,GAAIsC,EAAQtC,GACZoC,IAAKE,EAAQtC,GACbF,KAAMwC,EAAQxC,UAKpB,OACE,6BAASM,UAAS,UAAKC,IAAQkC,UAC7B,yBAAKnC,UAAS,UAAKC,IAAQmC,YAAb,UACbN,GAED,yBAAK9B,UAAS,UAAKC,IAAQoC,KAAb,UACXJ,GAEH,yBAAKjC,UAAWC,IAAQqC,UACtB,kBAAC,EAAD,CAAgB7B,YAAaA,O,+BC3BjC8B,EAAqB,CACvB9B,iBAGa+B,sBACXC,aAVkB,SAACC,GAAD,MAAY,CAC5Bd,YAAac,EAAMC,YAAYf,YAC/BC,aAAca,EAAMC,YAAYd,gBAQTU,GACzBK,IAFWJ,CAGXb,I,mBCjBJpC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,KAAO,sBAAsB,SAAW","file":"static/js/3.4eafd14b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3mA8V\",\"active\":\"DialogItem_active__2UtEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormAddMessage_form__2p7tK\",\"input_wrap\":\"FormAddMessage_input_wrap__336vk\"};","import React from 'react';\r\n\r\nconst Message = ({text}) => {\r\n  return (\r\n    <div>{text}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './DialogItem.module.css';\r\n\r\nconst DialogItem = ({id, avatar, name}) => {\r\n  let path = `/dialogs/${id}`;\r\n  return(\r\n    <div className={`${classes.dialog} wrap`}>\r\n    <img src={avatar} alt=\"\"/>\r\n    <NavLink to={path} activeClassName={classes.active} >{name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './FormAddMessage.module.css';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { required, composeValidators, maxLength } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControl/FormsControl';\r\n\r\nexport const FormAddMessage = ({sendMessage}) => {\r\n  const onSubmit = (formData) => {\r\n    if(formData.newMessage) {\r\n      sendMessage(formData.newMessage)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit} render={({handleSubmit, form}) => (\r\n        <form \r\n          className={`${classes.form} wrap`}\r\n          onSubmit={async event => {\r\n            await handleSubmit(event);\r\n            form.reset();\r\n          }}\r\n        >\r\n        <Field \r\n          name=\"newMessage\" \r\n          validate={composeValidators(required, maxLength(20))} \r\n          component={Textarea} \r\n          placeholder=\"Введите текст вашего сообщения\" \r\n          className={classes.input_wrap} \r\n        />\r\n          <button>Send</button>\r\n        </form>\r\n      )} \r\n    />\r\n  )\r\n}\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DIalogItem/DialogItem';\r\nimport { FormAddMessage } from './FormAddMessage/FormAddMessage';\r\n\r\n\r\nconst Dialogs = ({dialogsData, messagesData, sendMessage}) => {\r\n  const dialogItems = dialogsData.map((dialog) => {\r\n    return(\r\n    <DialogItem \r\n      id={dialog.id} \r\n      key={dialog.id} \r\n      name={dialog.name}\r\n      avatar={dialog.avatar}\r\n    />\r\n    )\r\n  });\r\n\r\n  const messages = messagesData.map((message) => {\r\n    return(\r\n      <Message \r\n        id={message.id}\r\n        key={message.id}\r\n        text={message.text}\r\n      />\r\n    )\r\n  });\r\n\r\n  return(\r\n    <section className={`${classes.dialogs}`}>\r\n      <div className={`${classes.dialog_list} wrap`}>\r\n      {dialogItems}    \r\n      </div>\r\n      <div className={`${classes.chat} wrap`}>\r\n        {messages}    \r\n      </div>\r\n      <div className={classes.form_add}>\r\n        <FormAddMessage sendMessage={sendMessage} />\r\n      </div>      \r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Dialogs;\r\n","import Dialogs from './Dialogs';\r\nimport { sendMessage } from '../../redux/dialogs_reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => ({\r\n      dialogsData: state.dialogsPage.dialogsData,\r\n      messagesData: state.dialogsPage.messagesData,\r\n})\r\n\r\nlet mapDispatchToProps = {\r\n  sendMessage\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps), \r\n    withAuthRedirect\r\n  )(Dialogs);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1jdRM\",\"dialog_list\":\"Dialogs_dialog_list__3vHqT\",\"chat\":\"Dialogs_chat__27MXj\",\"form_add\":\"Dialogs_form_add__3125G\"};"],"sourceRoot":""}