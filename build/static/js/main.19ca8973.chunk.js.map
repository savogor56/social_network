{"version":3,"sources":["utils/validators/validators.js","assets/img/default_avatar.jpg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Login/Login.module.css","components/Users/User/User.module.css","components/Header/Header.module.css","components/common/FormsControl/FormsControl.jsx","hoc/withAuthRedirect.jsx","components/Profile/Posts/Post/Post.module.css","components/Aside/Friends/Friends.module.css","components/common/Paginator/Paginator.module.css","components/Profile/Posts/FormAddsPost/FormAddsPost.module.css","components/common/FormsControl/FormsControl.module.css","components/Aside/Aside.module.css","components/Aside/MenuItem/MenuItem.module.css","redux/dialogs_reducer.js","components/Users/Users.module.css","components/common/Preloader/Preloader.module.css","assets/img/find_work.jpg","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Profile/Posts/Posts.module.css","logo.svg","components/Users/User/User.jsx","components/common/Preloader/Preloader.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","api/api.js","utils/object_helpers.js","redux/users_reducer.js","redux/users_selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/FormAddsPost/FormAddsPost.jsx","components/Profile/Posts/Posts.jsx","redux/profile_reducer.js","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth_reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","redux/app_reducer.js","components/Aside/Friends/Friends.jsx","components/Aside/MenuItem/MenuItem.jsx","components/Aside/Aside.jsx","components/Aside/AsideContainer.jsx","App.js","hoc/withSuspense.jsx","serviceWorker.js","redux/aside_reducer.js","redux/redux-store.js","index.js"],"names":["composeValidators","validators","value","reduce","error","validator","undefined","required","minLength","length","maxLength","module","exports","FormControl","meta","className","children","hasError","submitError","touched","classes","form_control","Textarea","props","input","placeholder","Input","withAuthRedirect","Component","RedirectComponent","this","isAuth","to","React","connect","state","auth","initialState","dialogsData","name","avatar","id","email","description","messagesData","text","dialogsReducer","action","type","newMessage","sendMessage","User","user","follow","unfollow","followingInProgress","toggleIsFollowing","photos","small","user_follow","src","defaultAvatar","alt","disabled","some","onClick","followed","user_info","status","Preloader","lds_ripple","Paginator","totalItemsCount","pageSize","currentPage","changePage","portionSize","currentPortion","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","filter","p","map","key","selected","Users","totalUsersCount","users","changePortion","usersElements","isFetching","instance","axios","withCredentials","headers","baseURL","usersAPI","getUsers","get","response","data","userId","post","delete","profileAPI","profileStatus","put","authAPI","password","rememberMe","updateObjectInArray","items","itemId","objPropName","newObjProps","item","TOGGLE_FOLLOWED","SET_USERS","SET_CURRENT_PAGE","SET_CURRENT_PORTION","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING","toggleFollow","setUsers","setCurrentPortion","toggleIsFetching","isFollowing","followUnfollowFlow","dispatch","apiMethod","a","resultCode","createSelector","usersPage","getPageSize","getPortionSize","getCurrentPage","getCurrentPortion","getTotalUsersCount","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","mapDispatchToProps","page","totalCount","bind","compose","ProfileStatus","putProfileStatus","editMode","setEditMode","setStatus","useEffect","toggleEditMode","autoFocus","onBlur","onChange","e","target","onDoubleClick","ProfileInfo","userProfile","main_info","fullname","fullName","large","about","aboutMe","sub_info","lookingForAJob","findWorkImg","lookingForAJobDescription","contacts","vk","website","facebook","twitter","instagram","youtube","github","mainLink","Post","message","FormAddPost","addPost","onSubmit","formData","postMessage","render","handleSubmit","form","submitting","event","reset","component","validate","input_wrap","Posts","postsData","postsElements","likesCount","posts","FormAddsPost","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_PROFILE_STATUS","DELETE_POST","newPostText","setProfileStatus","getProfile","profileData","PostsContainer","profilePage","Profile","ProfileContainer","userData","match","getProfileStatus","params","withRouter","Header","authLogOut","header","info_block","logo","title","login_block","login","SET_USER_DATA","SET_ERROR","messages","setUserData","setError","getCurrentUserData","HeaderContainer","LoginForm","pristine","submitSucceeded","values","submitFailed","login_form","err","Login","login_form_wrap","authLogin","LoginContainer","SET_INITIALISED","initialised","Friends","friends","friends_wrapper","friend","MenuItem","menuElem","link","activeClassName","active","Aside","menu","menuElements","aside","DialogsContainer","lazy","App","initialisedApp","AsideContainer","exact","path","fallback","app","Boolean","window","location","hostname","reducers","combineReducers","newPost","newText","dialogsPage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.19ca8973.chunk.js","sourcesContent":["export const composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\nexport const required = value => {\r\n    if(value) {\r\n        return undefined;\r\n    }\r\n    return 'Required' \r\n}\r\n\r\nexport const minLength = minLength => value => {\r\n    if (value && value.length < minLength) return `Min length is ${minLength}`;\r\n    return undefined\r\n}\r\n\r\nexport const maxLength = maxLength => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength}`;\r\n    return undefined;\r\n}\r\n\r\n\r\n    ","module.exports = __webpack_public_path__ + \"static/media/default_avatar.edcd29e7.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_info\":\"ProfileInfo_user_info__31I9g\",\"main_info\":\"ProfileInfo_main_info__vDqc8\",\"sub_info\":\"ProfileInfo_sub_info__bdbzc\",\"contacts\":\"ProfileInfo_contacts__3X4y4\",\"avatar\":\"ProfileInfo_avatar__3VHnJ\",\"about\":\"ProfileInfo_about__1rd7O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_form_wrap\":\"Login_login_form_wrap__133Tp\",\"login_form\":\"Login_login_form__UA8uL\",\"title\":\"Login_title__RwtHi\",\"input_wrap\":\"Login_input_wrap__3RaJ8\",\"error\":\"Login_error__1tQPS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3MINT\",\"user_follow\":\"User_user_follow__1l7z7\",\"user_info\":\"User_user_info__2x1Ew\",\"description\":\"User_description__mFVLh\",\"status\":\"User_status__3LB5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1MrFI\",\"title\":\"Header_title__IYDaa\",\"info_block\":\"Header_info_block__1Z3gk\",\"login_block\":\"Header_login_block__1UqFO\",\"user_info\":\"Header_user_info__3tDIL\"};","import React from 'react';\r\nimport classes from './FormsControl.module.css';\r\n\r\nconst FormControl = ({ meta, className, children }) => {\r\n    const hasError = (meta.error || meta.submitError) && meta.touched;\r\n    return (\r\n        <div className={`${className} ${classes.form_control} ${hasError && classes.error}`}>\r\n            {children}\r\n            {hasError && <span>{meta.error || meta.submitError}</span>}\r\n        </div> \r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, placeholder} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} placeholder={placeholder} />\r\n        </FormControl> \r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, placeholder } = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <label>{placeholder}</label>\r\n            <input {...input} placeholder={placeholder} />\r\n        </FormControl>\r\n    )\r\n}","\r\nimport React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth) {\r\n                return <Component {...this.props} />;                \r\n            }\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n    }\r\n    \r\n    const mapStateToProps = state => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__329Oe\",\"message\":\"Post_message__2g3Xy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends_wrapper\":\"Friends_friends_wrapper__1PKhy\",\"friend\":\"Friends_friend__3XRoT\",\"friends\":\"Friends_friends__2QQfr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__249c_\",\"selected\":\"Paginator_selected__2jpeC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormAddsPost_form__mnbpn\",\"input_wrap\":\"FormAddsPost_input_wrap__1_hlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControl_form_control__1h00-\",\"error\":\"FormsControl_error__2akA_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Aside_aside__3VVbC\",\"menu\":\"Aside_menu__1SHKT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MenuItem_item__uCLA7\",\"active\":\"MenuItem_active__2R8bw\"};","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet users = {\r\n  user1: {\r\n    id: 1,\r\n    name: \"Vasya\",\r\n    avatar: \"https://s3.amazonaws.com/liberty-uploads/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg\",\r\n    email: \"Vasya228@mail.ru\",\r\n    description: \"It is Vasiliy\"\r\n  },\r\n  user2: {\r\n    id: 2,\r\n    name: \"Pasha\",\r\n    avatar: \"https://www.meme-arsenal.com/memes/b5d2ec8e1ffa887b239fb66a8653dfe6.jpg\",\r\n    email: \"Paul345@mail.ru\",\r\n    description: \"Its Pasha\"\r\n  },\r\n  user3: {\r\n    id: 3,\r\n    name: \"Andrey\",\r\n    avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRvO35OFDvH2fHI947iBUePk-f2MyDsjVr-Tw&usqp=CAU\",\r\n    email: \"Andru1488@mail.ru\",\r\n    description: \"Its Andrey\"\r\n  },\r\n  user4: {\r\n    id: 4,\r\n    name: \"Ivan\",\r\n    avatar: \"https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg\",\r\n    email: \"Ivaness@mail.ru\",\r\n    description: \"Its Ivan\"\r\n  }\r\n}\r\n\r\nlet dialogsData= [\r\n  {\r\n    name: \"Andrey\",\r\n    avatar: users.user3.avatar,\r\n    id: 1\r\n  },\r\n  {\r\n    name: \"Pasha\",\r\n    avatar: users.user2.avatar,\r\n    id: 2\r\n  },\r\n  {\r\n    name: \"Ivan\",\r\n    avatar: users.user4.avatar,\r\n    id: 3\r\n  }\r\n]\r\n\r\nlet messagesData = [\r\n  {\r\n    id: 1,\r\n    text: \"Hi\"\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"what's up man?\"\r\n  },\r\n  {\r\n    id: 3,\r\n    text: \"By\"\r\n  }\r\n]\r\n\r\nlet initialState = {\r\n  dialogsData: dialogsData,\r\n  messagesData: messagesData\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n\r\n  switch(action.type) {\r\n    case SEND_MESSAGE:\r\n      let newMessage = {\r\n        id: state.messagesData[state.messagesData.length - 1].id + 1,\r\n        text: action.newMessage\r\n      };\r\n      return {\r\n        ...state,\r\n        messagesData: [...state.messagesData, newMessage],\r\n      };\r\n    default:\r\n      return state;\r\n  }  \r\n};\r\n\r\nexport const sendMessage = (newMessage) => {\r\n  return {\r\n    type: SEND_MESSAGE,\r\n    newMessage\r\n  }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__EKbbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_ripple\":\"Preloader_lds_ripple__Q0YDP\",\"lds-ripple\":\"Preloader_lds-ripple__3o4dp\"};","module.exports = __webpack_public_path__ + \"static/media/find_work.4ab860b2.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__1872N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__37As-\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport classes from './User.module.css';\r\nimport defaultAvatar from '../../../assets/img/default_avatar.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst User = ({user, follow, unfollow, followingInProgress, toggleIsFollowing }) => {\r\n  let avatar = user.photos.small;\r\n  let toggleFollow = () => {\r\n    toggleIsFollowing(true, user.id);\r\n    if (!user.followed) {\r\n      follow(user.followed, user.id);\r\n    } else {\r\n      unfollow(user.followed, user.id);\r\n    }      \r\n  }\r\n\r\n  return (\r\n    <div className={classes.user}>\r\n      <div className={classes.user_follow}>\r\n      <NavLink to={`/profile/${user.id}`}>\r\n      <img src={avatar ? avatar : defaultAvatar } alt=\"\" />\r\n      </NavLink>        \r\n        <button disabled={followingInProgress.some((id) => id === user.id )} onClick={toggleFollow} >\r\n        {!user.followed ? 'follow' : 'unfollow'}\r\n        </button>\r\n      </div>\r\n      <div className={classes.user_info}>\r\n        <div className={classes.description}>\r\n          <span>{user.name}</span>\r\n        </div>\r\n        <div className={classes.status}>\r\n          <span>{user.status}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport classes from './Preloader.module.css';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className={classes.lds_ripple}><div></div><div></div></div>\r\n  );\r\n}\r\n\r\nexport default Preloader;\r\n","import React, { useState } from 'react';\r\nimport classes from './Paginator.module.css'\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, changePage, portionSize, currentPortion}) => {\r\n    let pageCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount = Math.ceil(pageCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(currentPortion);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n    return (       \r\n            <div className={classes.pagination}>\r\n                { portionNumber > 1 &&\r\n                <button onClick={() => {setPortionNumber(portionNumber-1)}}>{\"<<\"}</button>\r\n                }\r\n                { pages\r\n                    .filter(p => p>= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                    .map(p => {\r\n                        return (\r\n                            <button\r\n                                key={p}\r\n                                onClick={() => { changePage(p, portionNumber) }}\r\n                                className={currentPage === p ? classes.selected : ''}\r\n                            >{p}</button>\r\n                        )\r\n                    })\r\n                }\r\n                {portionCount > portionNumber &&\r\n                <button onClick={() => {setPortionNumber(portionNumber + 1)}}>{\">>\"}</button>\r\n                }\r\n            </div>\r\n            \r\n    )\r\n};\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport classes from './Users.module.css'\r\nimport User from './User/User';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport Paginator from '../common/Paginator/Paginator';\r\n\r\nconst Users = ({ totalUsersCount, pageSize, currentPage, changePage, users, portionSize, currentPortion, changePortion, ...props}) => {\r\n  let usersElements = users.map((user) => (\r\n      <User \r\n        key={user.id} \r\n        user={user} \r\n        {...props} \r\n      />\r\n    ) \r\n  );\r\n  \r\n  return (\r\n    <section className={classes.users}>\r\n    {props.isFetching && <Preloader /> }\r\n      {usersElements}\r\n      <Paginator \r\n        totalItemsCount={totalUsersCount} \r\n        pageSize={pageSize} \r\n        currentPage={currentPage} \r\n        changePage={changePage}\r\n        changePortion={changePortion}\r\n        portionSize={portionSize}\r\n        currentPortion={currentPortion}\r\n      />\r\n    </section>    \r\n  )\r\n};\r\n\r\nexport default Users;\r\n","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  headers: {\r\n    'API-KEY': '2ae6c6ef-750a-4f6e-8e84-8c2e03bc5e97'\r\n  },\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n});\r\n\r\nexport const usersAPI = {\r\n  async getUsers (currentPage = 1, pageSize = 5) {\r\n    const response = await instance.get(`users?count=${pageSize}&page=${currentPage}`);\r\n    return response.data;\r\n  },\r\n  async follow(userId) {\r\n    const response = await instance.post(`follow/${userId}`);\r\n    return response.data;\r\n  },\r\n  async unfollow(userId) {\r\n    const response = await instance.delete(`follow/${userId}`);\r\n    return response.data;\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  async getProfile (userId = 2) {\r\n    const response = await instance.get(`profile/${userId}`);\r\n    return response.data\r\n  },  \r\n  async getProfileStatus (userId) {\r\n    const response = await instance.get(`profile/status/${userId}`);\r\n    return response.data;\r\n  },\r\n  async putProfileStatus (profileStatus) {\r\n    const response = await instance.put('profile/status', {status: profileStatus});\r\n    return response.data;\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  getCurrentUserData () {\r\n    return instance.get('auth/me');    \r\n  },\r\n  authLogin (email, password, rememberMe) {\r\n    return instance\r\n      .post('auth/login', {\r\n        email,\r\n        password,\r\n        rememberMe\r\n      })\r\n  },\r\n  LogOut () {\r\n    return instance.delete('auth/login')\r\n  }\r\n}\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => (\r\n    items.map((item) => {\r\n        if (item[objPropName] === itemId) {\r\n            return { ...item, ...newObjProps }\r\n        }\r\n        return item;\r\n    })\r\n)","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object_helpers\";\r\n\r\nconst TOGGLE_FOLLOWED = 'social_network/users/TOGGLE_FOLLOWED';\r\nconst SET_USERS = 'social_network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'social_network/users/SET_CURRENT_PAGE';\r\nconst SET_CURRENT_PORTION = 'social_network/users/SET_CURRENT_PORTION';\r\nconst TOGGLE_IS_FETCHING = 'social_network/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING = 'social_network/users/TOGGLE_IS_FOLLOWING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 1,\r\n    pageSize: 10,\r\n    portionSize: 20,\r\n    currentPortion: 1,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n  }\r\n\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case TOGGLE_FOLLOWED:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', { followed: action.followed }),\r\n      }\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: [...action.users],\r\n        totalUsersCount: action.totalUsersCount ?\r\n        action.totalUsersCount :\r\n        state.totalUsersCount\r\n      }\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.page\r\n      } \r\n    case SET_CURRENT_PORTION:\r\n      return {\r\n        ...state,\r\n        currentPortion: action.portionNumber\r\n      } \r\n    case TOGGLE_IS_FETCHING:\r\n      return{\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }     \r\n    case TOGGLE_IS_FOLLOWING:\r\n      return{\r\n        ...state,\r\n        followingInProgress: action.isFollowing ? \r\n          [...state.followingInProgress, action.userId ] :\r\n          [state.followingInProgress.filter(id => id !== action.userId )]\r\n      }     \r\n    default: \r\n      return state;     \r\n  }  \r\n}\r\n\r\nexport const toggleFollow = (followed, userId) => {\r\n  return {\r\n    type: TOGGLE_FOLLOWED,\r\n    followed: !followed,\r\n    userId\r\n  }\r\n}\r\n\r\nexport const setUsers = (users, totalUsersCount) => {\r\n  return {\r\n    type: SET_USERS,\r\n    users,\r\n    totalUsersCount\r\n  }\r\n}\r\n\r\nexport const setCurrentPage = (page) => {\r\n  return {\r\n    type: SET_CURRENT_PAGE,\r\n    page\r\n  }\r\n}\r\nexport const setCurrentPortion = (portionNumber) => {\r\n  return {\r\n    type: SET_CURRENT_PORTION,\r\n    portionNumber\r\n  }\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n  return {\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n  }\r\n}\r\n\r\nexport const toggleIsFollowing = (isFollowing, userId) => {\r\n  return {\r\n    type: TOGGLE_IS_FOLLOWING,\r\n    isFollowing,\r\n    userId\r\n  }\r\n}\r\n\r\nexport const requestUsers = (currentPage, pageSize, currentPortion) => async dispatch => {\r\n  dispatch(setCurrentPortion(currentPortion));\r\n  dispatch(setCurrentPage(currentPage));\r\n  dispatch(toggleIsFetching(true));\r\n  const data = await usersAPI.getUsers(currentPage, pageSize);\r\n  dispatch(toggleIsFetching(false));\r\n  const users = data.items;\r\n  const totalUsersCount = data.totalCount\r\n  dispatch(setUsers(users, totalUsersCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, followed, userId, apiMethod) => {\r\n  const data = await apiMethod(userId);\r\n  dispatch(toggleIsFollowing(false, userId));\r\n  if (data.resultCode === 0) {\r\n    dispatch(toggleFollow(followed, userId));        \r\n  }\r\n}\r\n\r\nexport const follow = (followed, userId) => dispatch => {\r\n  const apiMethod = usersAPI.follow.bind(this);\r\n  followUnfollowFlow(dispatch, followed, userId, apiMethod);\r\n  \r\n}\r\n\r\nexport const unfollow = (followed, userId) => dispatch => {\r\n  const apiMethod = usersAPI.unfollow.bind(this);\r\n  followUnfollowFlow(dispatch, followed, userId, apiMethod);\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n  return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n  return users.filter(item => true);\r\n}); \r\n\r\nexport const getPageSize  = (state) => {\r\n  return state.usersPage.pageSize\r\n}\r\nexport const getPortionSize  = (state) => {\r\n  return state.usersPage.portionSize\r\n}\r\n\r\nexport const getCurrentPage  = (state) => {\r\n  return state.usersPage.currentPage\r\n}\r\n\r\nexport const getCurrentPortion  = (state) => {\r\n  return state.usersPage.currentPortion\r\n}\r\n\r\nexport const getTotalUsersCount  = (state) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getIsFetching  = (state) => {\r\n  return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress  = (state) => {\r\n  return state.usersPage.followingInProgress\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport { toggleIsFollowing, requestUsers, follow, unfollow } from '../../redux/users_reducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, getCurrentPortion, getPortionSize } from './../../redux/users_selectors';\r\nimport { setCurrentPortion } from './../../redux/users_reducer';\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {    \r\n    const {users, requestUsers, currentPage, pageSize} = this.props;\r\n    if(users.length === 0) {\r\n      requestUsers(currentPage, pageSize);\r\n    }\r\n  }\r\n\r\n  changePage = (pageNumber, portionNumber) => {\r\n    const { pageSize, requestUsers } = this.props;\r\n    requestUsers(pageNumber, pageSize, portionNumber);\r\n  }\r\n\r\n  changePortion = (portionNumber) => {\r\n    const  {setCurrentPortion} = this.props;\r\n    setCurrentPortion(portionNumber);\r\n  }\r\n  \r\n  render() {\r\n    return(    \r\n      <Users\r\n        changePage={this.changePage}\r\n        changePortion={this.changePortion}\r\n        {...this.props}\r\n      />    \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    portionSize: getPortionSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    currentPortion: getCurrentPortion(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n  toggleIsFollowing,\r\n  requestUsers,\r\n  follow,\r\n  unfollow,\r\n  setCurrentPortion\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n  )(UsersContainer)","import React, { useEffect, useState } from 'react';\r\nimport classes from './ProfileStatus.module.css';\r\n\r\n\r\nconst ProfileStatus = ({profileStatus, putProfileStatus}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(profileStatus);\r\n\r\n  useEffect(() => {\r\n    setStatus(profileStatus);\r\n  }, [profileStatus]);\r\n\r\n  const toggleEditMode = () => {\r\n    setEditMode(!editMode);\r\n  }\r\n\r\n  const sendStatus = () => {\r\n    toggleEditMode();\r\n    if (status !== profileStatus){\r\n      putProfileStatus(status);\r\n    }\r\n  }\r\n\r\n  const onChangeStatus = (e) => {\r\n    const status = e.target.value;\r\n    setStatus(status)\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.status}>\r\n      {\r\n        editMode ?\r\n        <input \r\n          autoFocus={true}\r\n          type=\"text\"\r\n          onBlur={sendStatus}\r\n          onChange={onChangeStatus}\r\n          value={status}\r\n        /> :\r\n        <span onDoubleClick={toggleEditMode} >\r\n        {profileStatus ? profileStatus : 'status'}\r\n        </span>\r\n      }   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport findWorkImg from '../../../assets/img/find_work.jpg';\r\nimport defaultAvatar from '../.././../assets/img/default_avatar.jpg';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\n\r\n\r\nconst ProfileInfo = ({userProfile, profileStatus, putProfileStatus}) => {\r\n  if(!userProfile) {\r\n    return <Preloader />\r\n  }\r\n  return(\r\n    <div className={classes.user_info + ' wrap'}>\r\n      <div className={classes.main_info}>\r\n          <div className={classes.fullname}>\r\n            <h3>{userProfile.fullName}</h3>\r\n          </div>\r\n          <div className={classes.avatar}>\r\n          <img src={userProfile.photos.large ? userProfile.photos.large : defaultAvatar} alt=\"\"></img>\r\n          </div>\r\n          <div className={classes.about}>{userProfile.aboutMe}</div>\r\n          <ProfileStatus\r\n            profileStatus={profileStatus} \r\n            putProfileStatus={putProfileStatus} \r\n          />\r\n      </div>\r\n      <div className={classes.sub_info}>\r\n        {userProfile.lookingForAJob && <img src={findWorkImg} alt='' />}\r\n        {userProfile.lookingForAJob && userProfile.lookingForAJobDescription && \r\n        <div>{userProfile.lookingForAJobDescription}</div> }\r\n      </div>\r\n      <div className={classes.contacts}>\r\n      <h4>Мои контакты</h4>\r\n      {userProfile.contacts.vk && <div>vk: {userProfile.contacts.vk}</div>}\r\n      {userProfile.contacts.website && <div>website: {userProfile.contacts.website}</div>}\r\n      {userProfile.contacts.facebook && <div>facebook: {userProfile.contacts.facebook}</div>}\r\n      {userProfile.contacts.twitter && <div>twitter: {userProfile.contacts.twitter}</div>}\r\n      {userProfile.contacts.instagram && <div>instagram: {userProfile.contacts.instagram}</div>}\r\n      {userProfile.contacts.youtube && <div>youtube: {userProfile.contacts.youtube}</div>}\r\n      {userProfile.contacts.github && <div>github: {userProfile.contacts.github}</div>}\r\n      {userProfile.contacts.mainLink && <div>mainLink: {userProfile.contacts.mainLink}</div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\nimport defaultAvatar from '../../../../assets/img/default_avatar.jpg';\r\n\r\nconst Post = ({avatar, message}) => {\r\n  return (\r\n    <div className={`${classes.item} wrap`}>\r\n      <div className={classes.avatar}>\r\n        <img src={avatar || defaultAvatar} alt=\"\"></img>\r\n      </div>\r\n      <div className={classes.message}>\r\n      {message}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './FormAddsPost.module.css'\r\nimport { Form, Field } from 'react-final-form';\r\nimport { required, composeValidators, maxLength } from '../../../../utils/validators/validators';\r\nimport { Textarea } from '../../../common/FormsControl/FormsControl';\r\n\r\nconst FormAddPost = ({addPost}) => {\r\n  const onSubmit = (formData) => {\r\n    if (formData.postMessage) {\r\n      addPost(formData.postMessage);\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Form onSubmit={onSubmit} render={({handleSubmit, form, submitting}) => (\r\n      <form \r\n        className={`${classes.form} wrap`} \r\n        onSubmit={async (event) => {\r\n          await handleSubmit(event);\r\n          form.reset();\r\n        }} \r\n      >\r\n        <Field \r\n          name=\"postMessage\" \r\n          component={Textarea} \r\n          placeholder=\"Введите текст вашего сообщения\" \r\n          validate={composeValidators(required, maxLength(20))}\r\n          className={classes.input_wrap}\r\n        />\r\n        <button onSubmit={form.reset} disabled={submitting}>Send</button>\r\n      </form>\r\n      )}       \r\n    />\r\n  )\r\n}\r\n\r\nexport default FormAddPost;","import React from 'react';\r\nimport classes from './Posts.module.css';\r\nimport Post from './Post/Post';\r\nimport FormAddsPost from './FormAddsPost/FormAddsPost';\r\n\r\nconst Posts = ({postsData, addPost}) => {\r\n  let postsElements = postsData.map( post => {\r\n    return(\r\n      <Post\r\n        key={post.id}\r\n        message={post.message} \r\n        avatar={post.avatar}\r\n        likesCount={post.likesCount}\r\n      />\r\n    )\r\n  });\r\n  \r\n  return(\r\n    <div className={classes.posts}>\r\n      <FormAddsPost addPost={addPost} />\r\n      {postsElements}\r\n    </div>   \r\n  )\r\n}\r\n\r\nexport default Posts;","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"social_network/profile/ADD_POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"social_network/profile/UPDATE_NEW_POST_TEXT\";\r\nconst SET_USER_PROFILE = \"social_network/profile/SET_USER_PROFILE\";\r\nconst TOGGLE_IS_FETCHING = \"social_network/profile/TOGGLE_IS_FETCHING\";\r\nconst SET_PROFILE_STATUS = \"social_network/profile/SET_PROFILE_STATUS\";\r\nconst DELETE_POST = \"social_network/profile/DELETE_POST\";\r\n\r\nlet initialState = {\r\n  postsData: [\r\n    {\r\n      id: 1,\r\n      message: \"Hi bro, its my first post!! How are u?\",\r\n      likesCount: 2,\r\n      avatar: \"https://www.meme-arsenal.com/memes/b5d2ec8e1ffa887b239fb66a8653dfe6.jpg\"\r\n    },\r\n    {\r\n      id: 2,\r\n      message: \"Hi and me too! I'm ok!\",\r\n      likesCount: 1,\r\n      avatar: \"https://s3.amazonaws.com/liberty-uploads/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg\"\r\n    }\r\n  ],\r\n  newPostText: \"\",\r\n  userProfile: null,\r\n  isFetching: false,\r\n  profileStatus: ''\r\n}\r\n\r\n\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n  switch(action.type) {       \r\n    case ADD_POST:\r\n      let newPost = {\r\n        id: state.postsData[state.postsData.length - 1].id + 1,\r\n        message: action.postMessage,\r\n        likesCount: 0,\r\n        avatar: ''\r\n      };\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData, newPost],\r\n        newPostText: \"\"\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        postsData: state.postsData.filter((item) => item.id !== action.id)\r\n      };\r\n    case UPDATE_NEW_POST_TEXT: \r\n      return {\r\n        ...state,\r\n        newPostText: action.newText\r\n      };      \r\n    case SET_USER_PROFILE: \r\n      return {\r\n        ...state,\r\n        userProfile: action.profileData\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n    case SET_PROFILE_STATUS:\r\n      return {\r\n        ...state,\r\n        profileStatus: action.profileStatus\r\n      }     \r\n    default: \r\n      return state;\r\n  }  \r\n}\r\n\r\nexport const addPost = (postMessage) => {\r\n  return {\r\n    type: ADD_POST,\r\n    postMessage\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => {\r\n  return {\r\n    type: DELETE_POST,\r\n    id\r\n  }\r\n};\r\n\r\nexport const updateNewPostText = (text) => {\r\n  return {\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: text\r\n  }\r\n};\r\n\r\nexport const setUserProfile = (profileData) => ({\r\n  type: SET_USER_PROFILE,\r\n  profileData\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching\r\n})\r\n\r\nexport const setProfileStatus = (profileStatus) => ({\r\n  type: SET_PROFILE_STATUS,\r\n  profileStatus\r\n})\r\n\r\nexport const getProfile = userId => async dispatch => {\r\n  dispatch(toggleIsFetching(true));\r\n  const data = await profileAPI.getProfile(userId)\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUserProfile(data));\r\n}\r\n\r\nexport const getProfileStatus = (userId) => async dispatch => {\r\n  const data = await profileAPI.getProfileStatus(userId);\r\n  dispatch(setProfileStatus(data));\r\n}\r\n\r\nexport const putProfileStatus = (profileStatus) => async dispatch => {\r\n  let data = await profileAPI.putProfileStatus(profileStatus)\r\n  if (!data.resultCode) {\r\n    dispatch(setProfileStatus(profileStatus));\r\n  }\r\n}","import Posts from './Posts';\r\nimport { connect } from 'react-redux';\r\nimport { addPost} from '../../../redux/profile_reducer';\r\n\r\nconst mapStateToProps = state => ({\r\n      postsData: state.profilePage.postsData\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  addPost\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport PostsContainer from './Posts/PostsContainer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\n\r\n\r\nconst Profile = ({isFetching, userProfile, profileStatus, putProfileStatus}) => {\r\n  return(\r\n    <section>\r\n      {isFetching ? \r\n      <Preloader /> :\r\n      <ProfileInfo \r\n        userProfile={userProfile} \r\n        profileStatus={profileStatus} \r\n        putProfileStatus={putProfileStatus}      \r\n      />\r\n      }        \r\n      <PostsContainer />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getProfile, getProfileStatus, putProfileStatus } from './../../redux/profile_reducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {  \r\n  componentDidMount() {\r\n    const { userData, match, userProfile, getProfile, getProfileStatus } = this.props;\r\n    if (userData !== null) {\r\n      let userId = match.params.userId ?\r\n        match.params.userId : userData.id;\r\n      if (!userProfile || userProfile.userId !== userId) {\r\n        getProfile(userId);\r\n        getProfileStatus(userId);\r\n      }\r\n    }    \r\n  }\r\n   \r\n  render() {    \r\n    return <Profile {...this.props} />    \r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userProfile: state.profilePage.userProfile,\r\n    userData: state.auth.data,\r\n    isFetching: state.profilePage.isFetching,\r\n    profileStatus: state.profilePage.profileStatus,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProfile,\r\n  getProfileStatus,\r\n  putProfileStatus\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps), \r\n    withRouter,\r\n    withAuthRedirect\r\n  )(ProfileContainer);","import React from 'react';\r\nimport logo from '../../logo.svg';\r\nimport classes from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport defaultAvatar from '../../assets/img/default_avatar.jpg';\r\n\r\nconst Header = ({isFetching, isAuth, userProfile, userData, authLogOut}) => {\r\n  return(\r\n    <header className={`${classes.header} wrap`}>\r\n      <div className={classes.info_block}>\r\n        <img src={logo} alt=\"\" />   \r\n        <div className={classes.title}>Social Network</div>\r\n      </div>\r\n      {        \r\n        isFetching ? <Preloader /> :\r\n        <div className={classes.login_block}>\r\n          {\r\n            isAuth ?\r\n            <div className={classes.user_info}>\r\n              <span>{userData.login}</span>\r\n              {userProfile && <img src={userProfile.photos.small ? userProfile.photos.small : defaultAvatar} alt=\"\"/>}\r\n              <button onClick={authLogOut} >Log Out</button>\r\n            </div> :\r\n            <NavLink to='/login'>LogIn</NavLink>\r\n          }          \r\n        </div>\r\n      }     \r\n      \r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import { authAPI } from \"../api/api\";\r\nimport { getProfile } from \"./profile_reducer\";\r\n\r\nconst TOGGLE_IS_FETCHING = 'social_network/auth/TOGGLE_IS_FETCHING';\r\nconst SET_USER_DATA = 'social_network/auth/SET_USER_DATA';\r\nconst SET_ERROR = 'social_network/auth/SET_ERROR';\r\n\r\nlet initialState = {\r\n    resultCode: null,\r\n    messages: null,\r\n    data: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n    error: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        data: action.userData,\r\n        resultCode: action.resultCode,\r\n        messages: action.messages,\r\n        isAuth: action.isAuth\r\n      }\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }  \r\n}\r\n\r\n\r\nconst setUserData = (userData, resultCode, messages, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  userData,\r\n  resultCode,\r\n  messages,\r\n  isAuth\r\n})\r\n\r\nconst toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching\r\n})\r\n\r\nconst setError = (error) => ({\r\n  type: SET_ERROR,\r\n  error\r\n})\r\n\r\nexport const getCurrentUserData = () => async dispatch => {\r\n  dispatch(toggleIsFetching(true));    \r\n  const response = await authAPI.getCurrentUserData();      \r\n  dispatch(toggleIsFetching(false));\r\n  const { data, resultCode, messages } = response.data;\r\n  if (resultCode === 0) {\r\n    dispatch(setUserData(data, resultCode, messages, true));\r\n    getProfile(data.id);\r\n  }  \r\n}\r\n\r\nexport const authLogin = (email, password, rememberMe) => async dispatch => {\r\n  dispatch(toggleIsFetching(true));\r\n  const response = await authAPI.authLogin(email, password, rememberMe);\r\n  const {resultCode, messages } = response.data;\r\n    dispatch(setError(null));\r\n    dispatch(toggleIsFetching(false));\r\n  if (resultCode === 0) {\r\n      dispatch(getCurrentUserData());\r\n    } else {\r\n      dispatch(setError(messages[0]))\r\n    }      \r\n}\r\n\r\nexport const authLogOut = () => async dispatch => {\r\n  dispatch(toggleIsFetching(true));\r\n  let response = await authAPI.LogOut();\r\n  dispatch(toggleIsFetching(false));\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setUserData(null, null, null, false));\r\n  }      \r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { authLogOut } from '../../redux/auth_reducer';\r\nimport { getProfile } from '../../redux/profile_reducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return(\r\n      <Header {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isFetching: state.auth.isFetching,\r\n  userData: state.auth.data,\r\n  isAuth: state.auth.isAuth,\r\n  userProfile: state.profilePage.userProfile\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProfile,\r\n  authLogOut\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import React from 'react';\r\nimport classes from './Login.module.css';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { required, composeValidators, minLength } from '../../utils/validators/validators';\r\nimport { Input } from '../common/FormsControl/FormsControl';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = (props) => {\r\n    let err = '';\r\n    const onSubmit = (formData) => {\r\n        if (formData) {\r\n            const { email, password, rememberMe } = formData;\r\n            props.authLogin(email, password, rememberMe);       \r\n        }        \r\n    }\r\n\r\n    if (props.error) {\r\n        err = props.error;\r\n    }   \r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n            <section className={classes.login_form_wrap}>\r\n                <div className={classes.title}>\r\n                    <h2 >Log In</h2>\r\n                </div>            \r\n                <LoginForm err={err} onSubmit={onSubmit} />\r\n            </section>                \r\n    )\r\n}\r\n\r\nconst LoginForm = (props) => {  \r\n    return (\r\n        <Form onSubmit={props.onSubmit}>\r\n            {({submitError, handleSubmit, pristine, form, submitting, values, submitSucceeded, submitFailed}) => (\r\n                <form \r\n                    className={classes.login_form} \r\n                    onSubmit={async event => {\r\n                        await handleSubmit(event);\r\n                        if (submitSucceeded) {\r\n                            form.reset();\r\n                        }\r\n                    }}\r\n                >\r\n                    <Field\r\n                        name=\"email\"\r\n                        placeholder=\"E-mail\"\r\n                        component={Input}\r\n                        type=\"text\"\r\n                        className={classes.input_wrap}\r\n                        validate={required}\r\n                    />\r\n                    <Field \r\n                        name=\"password\" \r\n                        placeholder=\"Password\" \r\n                        component={Input}\r\n                        type=\"password\"\r\n                        className={classes.input_wrap} \r\n                        validate={composeValidators(required, minLength(6))} \r\n                    />                    \r\n                <div>\r\n                    <Field name=\"rememberMe\"  component=\"input\" type=\"checkbox\" />\r\n                    <span>Remember me</span>\r\n                </div>\r\n                {props.err && <div className={classes.error}>{props.err}</div>}               \r\n                <button disabled={submitting}>Login</button>\r\n                </form>\r\n            )}\r\n        </Form>        \r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Login from './Login';\r\nimport { authLogin } from './../../redux/auth_reducer';\r\n\r\nclass LoginContainer extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Login {...this.props} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth,\r\n  error: state.auth.error\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  authLogin\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);\r\n","import { getCurrentUserData } from \"./auth_reducer\";\r\n\r\nconst SET_INITIALISED = 'social_network/app/SET_INITIALISED';\r\n\r\nlet initialState = {\r\n  initialised: null\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_INITIALISED:\r\n      return {\r\n        ...state,\r\n        initialised: action.initialised\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const toggleInitialised = (initialised) => ({\r\n  type: SET_INITIALISED,\r\n  initialised\r\n})\r\n\r\nexport const initialisedApp = () => async dispatch => {  \r\n  await dispatch(getCurrentUserData());\r\n  dispatch(toggleInitialised(true));\r\n}\r\n\r\n","import React from 'react';\r\nimport classes from './Friends.module.css';\r\n\r\nexport const Friends = ({friends}) => {\r\n\r\n  return (\r\n    <div className={classes.friends_wrapper}>\r\n    <p>Friends</p>\r\n      <div className={classes.friends}>\r\n        {\r\n          friends.map((friend) => {\r\n            return (\r\n              <div key={friend.id} className={classes.friend}>\r\n                  <img src={friend.avatar} alt=\"\"/>\r\n                  <p>{friend.name}</p>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport classes from './MenuItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MenuItem = ({menuElem}) => {\r\n  return(\r\n      <div className={`${classes.item}`}>\r\n        <NavLink to={menuElem.link} activeClassName={classes.active}>{menuElem.name}</NavLink>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default MenuItem;\r\n","import React from 'react';\r\nimport classes from './Aside.module.css';\r\nimport { Friends } from './Friends/Friends';\r\nimport MenuItem from './MenuItem/MenuItem';\r\n\r\nconst Aside = ({menu, friends}) => {\r\n  let menuElements = menu.map((menuElem) => {\r\n    return(\r\n      <MenuItem key={menuElem.id} menuElem={menuElem} />\r\n    )\r\n  })\r\n  return (\r\n    <aside className={`${classes.aside} wrap`}>\r\n      <div className={classes.menu}>\r\n      {menuElements}\r\n      </div>      \r\n      <Friends friends={friends} />\r\n    </aside>\r\n  ) \r\n};\r\n\r\nexport default Aside","import { connect } from \"react-redux\";\r\nimport Aside from \"./Aside\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    menu: state.aside.menu,\r\n    friends: state.aside.friends\r\n})\r\n\r\nexport default connect(mapStateToProps)(Aside)","import React, { lazy } from 'react';\r\nimport './App.css';\r\nimport { Route } from 'react-router-dom';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginContainer from './components/Login/LoginContainer';\r\nimport { connect } from 'react-redux';\r\nimport { initialisedApp } from './redux/app_reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport AsideContainer from './components/Aside/AsideContainer';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\nconst DialogsContainer = lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initialisedApp();\r\n  }\r\n\r\n  render() {\r\n    const {initialised} = this.props;\r\n    if (!initialised) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n      <div className=\"background blur\">\r\n        <div className=\"app_wrapper\">\r\n          <HeaderContainer />\r\n          <AsideContainer />\r\n          <main className=\"wrap main\">\r\n          <Route exact path=\"/dialogs\" render={withSuspense(DialogsContainer)} />                  \r\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n          <Route exact path=\"/users\" render={() => <UsersContainer />} />\r\n          <Route exact path=\"/login\" render={() => <LoginContainer />} />\r\n          </main>          \r\n        </div>\r\n      </div> \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialised: state.app.initialised\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  initialisedApp\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","\r\nimport React, { Suspense } from 'react';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n            \r\n                <Component {...props} />\r\n        </Suspense>\r\n    )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let users = {\r\n  user1: {\r\n    id: 1,\r\n    name: \"Vasya\",\r\n    avatar: \"https://s3.amazonaws.com/liberty-uploads/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg\",\r\n    email: \"Vasya228@mail.ru\",\r\n    description: \"It is Vasiliy\"\r\n  },\r\n  user2: {\r\n    id: 2,\r\n    name: \"Pasha\",\r\n    avatar: \"https://www.meme-arsenal.com/memes/b5d2ec8e1ffa887b239fb66a8653dfe6.jpg\",\r\n    email: \"Paul345@mail.ru\",\r\n    description: \"Its Pasha\"\r\n  },\r\n  user3: {\r\n    id: 3,\r\n    name: \"Andrey\",\r\n    avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRvO35OFDvH2fHI947iBUePk-f2MyDsjVr-Tw&usqp=CAU\",\r\n    email: \"Andru1488@mail.ru\",\r\n    description: \"Its Andrey\"\r\n  },\r\n  user4: {\r\n    id: 4,\r\n    name: \"Ivan\",\r\n    avatar: \"https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg\",\r\n    email: \"Ivaness@mail.ru\",\r\n    description: \"Its Ivan\"\r\n  }\r\n}\r\n\r\nlet initialState = {\r\n  friends: [\r\n    {\r\n      id: users.user2.id,\r\n      name: users.user2.name,\r\n      avatar: users.user2.avatar\r\n    },\r\n    {\r\n      id: users.user3.id,\r\n      name: users.user3.name,\r\n      avatar: users.user3.avatar\r\n    },\r\n    {\r\n      id: users.user4.id,\r\n      name: users.user4.name,\r\n      avatar: users.user4.avatar\r\n    }\r\n  ],\r\n  menu: [\r\n    {\r\n      id: 1,\r\n      name: 'Profile',\r\n      link: '/profile'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Dialogs',\r\n      link: '/dialogs'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'News',\r\n      link: '/news'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Music',\r\n      link: '/music'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Settings',\r\n      link: '/settings'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Users',\r\n      link: '/users'\r\n    },\r\n  ]\r\n}\r\n\r\nexport const asideReducer = (state = initialState, action) => {\r\n  return state;\r\n}","import { profileReducer } from \"./profile_reducer\";\r\nimport { dialogsReducer } from \"./dialogs_reducer\";\r\nimport { asideReducer } from \"./aside_reducer\";\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { usersReducer } from \"./users_reducer\";\r\nimport { authReducer } from \"./auth_reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { appReducer } from './app_reducer';\r\n\r\nlet reducers = combineReducers({\r\n profilePage: profileReducer,\r\n dialogsPage: dialogsReducer,\r\n aside: asideReducer,\r\n usersPage: usersReducer,\r\n auth: authReducer,\r\n app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\n  ReactDOM.render(\r\n      <BrowserRouter> \r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n      </BrowserRouter>, \r\n    document.getElementById('root')\r\n  );\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}